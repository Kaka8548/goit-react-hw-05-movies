{"version":3,"file":"static/js/251.b9d9455e.chunk.js","mappings":"wRAEqBA,EAAAA,WAInB,cAAe,+DAHJ,qCAGG,iFACZC,KAAKC,SAAW,KAChBD,KAAKE,MAAQ,IACd,CASA,OATA,mCAED,WACE,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,SAAQ,OAACL,KAAF,MACPE,MAAOF,KAAKE,QAGd,OAAOI,EAAAA,EAAAA,IAAA,kBAAaN,KAAb,cAA6BA,KAAKC,SAAlC,YAA8CE,GACtD,OAhBkBJ,GAmBRQ,EAAM,IAAIR,C,mFCnBVS,EAAeC,EAAAA,GAAAA,GAAH,4EAMZC,EAAmBD,EAAAA,GAAAA,GAAH,qGAMhBE,EAAqBF,EAAAA,GAAAA,IAAH,gDAIlBG,EAAoBH,EAAAA,GAAAA,EAAH,4E,iBCTf,SAASI,EAAT,GAAqD,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACpD,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,WACE,SAACJ,EAAD,CACEY,QAAQ,OACRC,IAAKR,EAAYE,EAAMO,YACvBC,IAAI,kBAEN,SAACd,EAAD,UAAoBM,EAAMS,YAPPT,EAAME,GADd,KActB,C,6JCxBYQ,EAAanB,EAAAA,GAAAA,KAAH,uDAKVoB,EAAcpB,EAAAA,GAAAA,MAAH,+TAiBXqB,EAAYrB,EAAAA,GAAAA,OAAH,gZ,SCpBP,SAASsB,EAAT,GAAsC,IAAjBC,EAAgB,EAAhBA,aAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO/B,EAAP,KAAcgC,EAAd,KAYA,OACE,UAACN,EAAD,CAAYO,SAXO,SAAAC,GACnBA,EAAMC,iBACNH,EAASE,EAAME,OAAO,GAAGC,OACzBP,EAAa9B,EACd,EAOC,WACE,SAAC2B,EAAD,CACEW,KAAK,OACLD,MAAOrC,EACPuC,SATe,SAAAL,GACnBF,EAASE,EAAME,OAAOC,MACvB,EAQKG,YAAY,yBAEd,SAACZ,EAAD,CAAWU,KAAK,SAAhB,sBAGL,C,qBCrBc,SAASG,IAAU,IAAD,EAC/B,GAAsCV,EAAAA,EAAAA,UAAS,IAA/C,eAAOW,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAO3C,EAAP,KAAqB4C,EAArB,KACMC,EAAU,UAAG7C,EAAa8C,IAAI,gBAApB,QAAgC,GAC1ClC,GAAWmC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACR,GAAKH,EAAL,CACA,IAAMI,EAAa,mCAAG,6FACdC,EAAiB9C,EAAAA,GACRN,SAAW,gBAC1BoD,EAAenD,MAAQ8C,EAHH,kBAMGK,EAAeC,cANlB,OAMZxC,EANY,OAOlB+B,EAAe/B,EAAOyC,KAAKC,SAPT,kDASlBC,QAAQC,IAAR,MATkB,0DAAH,qDAanBN,GAduB,CAexB,GAAE,CAACJ,IASJ,OACE,iCACE,SAACjB,EAAD,CAAWC,aATM,SAAA2B,GACfA,EAAYC,OAAOC,gBAAkBb,EAAWY,OAAOC,eAG3Dd,EAAgC,KAAhBY,EAAqB,CAAEzD,MAAOyD,GAAgB,CAAC,EAChE,EAI0CpB,MAAOS,IAC7CJ,IACC,SAAC/B,EAAA,EAAD,CACEC,OAAQ8B,EACR7B,SAAUA,EACVC,UAlCU,0CAuCnB,C","sources":["api/searchMovies.js","components/movieList/MovieList.styled.js","components/movieList/MovieList.jsx","components/searchBar/SearchBar.styled.js","components/searchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default class SearchMovies {\n  #API_KEY = '65e6f4aac7e3640c780d24b1205717d3';\n  #API_URL = `https://api.themoviedb.org/3`;\n\n  constructor() {\n    this.endpoint = null;\n    this.query = null;\n  }\n\n  fetchMovies() {\n    const searchParams = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: this.query,\n    });\n\n    return axios.get(`${this.#API_URL}${this.endpoint}?${searchParams}`);\n  }\n}\n\nexport const api = new SearchMovies();\n","import styled from 'styled-components';\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 45px;\n`;\n\nexport const TrendingListItem = styled.li`\n  width: calc((100% - 90px) / 3);\n  margin-top: 10px;\n  text-align: left;\n`;\n\nexport const TrendingListPoster = styled.img`\n  margin-bottom: 10px;\n`;\n\nexport const TrendingListTitle = styled.p`\n  font-size: 20px;\n  font-family: 'FixelREgular';\n`;\n","import {\n  TrendingListTitle,\n  TrendingList,\n  TrendingListItem,\n  TrendingListPoster,\n} from './MovieList.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies, location, configSrc }) {\n  return (\n    <TrendingList>\n      {movies.map(movie => (\n        <TrendingListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <TrendingListPoster\n              loading=\"lazy\"\n              src={configSrc + movie.poster_path}\n              alt=\"movie poster\"\n            />\n            <TrendingListTitle>{movie.title}</TrendingListTitle>\n          </Link>\n        </TrendingListItem>\n      ))}\n    </TrendingList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n  configSrc: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const SearchInput = styled.input`\n  border: 2px solid transparent;\n  border-radius: 15px;\n  height: 35px;\n  width: 280px;\n  padding-left: 10px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  font-family: inherit;\n\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: transparent;\n    border-color: #1d63ff;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 70px;\n  color: #fff;\n  font-family: 'FixelRegular';\n  background-color: #1d63ff;\n  border-radius: 15px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  transition: all 0.3s ease;\n\n  &:focus,\n  &:hover {\n    box-shadow: none;\n    background-color: #1144b4;\n  }\n`;\n","import { useState } from 'react';\nimport { SearchForm, SearchInput, SubmitBtn } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nexport default function SearchBar({ onFormSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.target[0].value);\n    onFormSubmit(query);\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Type the movie name\"\n      />\n      <SubmitBtn type=\"submit\">Seacrh</SubmitBtn>\n    </SearchForm>\n  );\n}\n\nSearchBar.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n","import { api } from 'api/searchMovies';\nimport MovieList from 'components/movieList/MovieList';\nimport SearchBar from 'components/searchBar/SearchBar';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [queryMovies, setQueryMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n  const configSrc = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    if (!movieQuery) return;\n    const fetchedMovies = async () => {\n      const searchForQuery = api;\n      searchForQuery.endpoint = '/search/movie';\n      searchForQuery.query = movieQuery;\n\n      try {\n        const movies = await searchForQuery.fetchMovies();\n        setQueryMovies(movies.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchedMovies();\n  }, [movieQuery]);\n\n  const onFormSubmit = searchQuery => {\n    if (searchQuery.trim().toLowerCase() === movieQuery.trim().toLowerCase()) {\n      return;\n    }\n    setSearchParams(searchQuery !== '' ? { query: searchQuery } : {});\n  };\n\n  return (\n    <>\n      <SearchBar onFormSubmit={onFormSubmit} value={movieQuery} />\n      {queryMovies && (\n        <MovieList\n          movies={queryMovies}\n          location={location}\n          configSrc={configSrc}\n        />\n      )}\n    </>\n  );\n}\n"],"names":["SearchMovies","this","endpoint","query","searchParams","URLSearchParams","api_key","axios","api","TrendingList","styled","TrendingListItem","TrendingListPoster","TrendingListTitle","MovieList","movies","location","configSrc","map","movie","to","id","state","from","loading","src","poster_path","alt","title","SearchForm","SearchInput","SubmitBtn","SearchBar","onFormSubmit","useState","setQuery","onSubmit","event","preventDefault","target","value","type","onChange","placeholder","Movies","queryMovies","setQueryMovies","useSearchParams","setSearchParams","movieQuery","get","useLocation","useEffect","fetchedMovies","searchForQuery","fetchMovies","data","results","console","log","searchQuery","trim","toLowerCase"],"sourceRoot":""}