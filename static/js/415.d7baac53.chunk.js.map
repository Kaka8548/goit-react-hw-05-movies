{"version":3,"file":"static/js/415.d7baac53.chunk.js","mappings":"iQAqBaA,EAAM,IAnBEC,WAInB,cAAe,+DAHJ,qCAGG,iFACZC,KAAKC,SAAW,KAChBD,KAAKE,MAAQ,IACd,CASA,OATA,mCAED,WACE,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,SAAQ,OAACL,KAAF,MACPE,MAAOF,KAAKE,QAGd,OAAOI,EAAAA,EAAAA,IAAA,kBAAaN,KAAb,cAA6BA,KAAKC,SAAlC,YAA8CE,GACtD,OAhBkBJ,G,mFCARQ,EAAeC,EAAAA,GAAAA,GAAH,4EAMZC,EAAmBD,EAAAA,GAAAA,GAAH,qGAMhBE,EAAqBF,EAAAA,GAAAA,IAAH,gDAIlBG,EAAoBH,EAAAA,GAAAA,EAAH,4E,iBCTf,SAASI,EAAT,GAAqD,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACpD,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,WACE,SAACJ,EAAD,CACEY,QAAQ,OACRC,IAAKR,EAAYE,EAAMO,YACvBC,IAAI,kBAEN,SAACd,EAAD,UAAoBM,EAAMS,YAPPT,EAAME,GADd,KActB,C,uJCpBc,SAASQ,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACMf,GAAWgB,EAAAA,EAAAA,MAkBjB,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6GAEyBjC,EAAAA,EAAAA,cAFzB,OAEUkC,EAFV,OAGIH,EAAUG,EAAOC,KAAKC,SAH1B,gDAKIC,QAAQC,IAAR,MALJ,0DAHc,sBACdtC,EAAAA,EAAAA,SAAe,sBADD,mCAYduC,EACD,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAWxB,OAAQA,EAAQC,SAAUA,EAAUC,UApBjC,0CAuBnB,C","sources":["api/searchMovies.js","components/movieList/MovieList.styled.js","components/movieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default class SearchMovies {\n  #API_KEY = '65e6f4aac7e3640c780d24b1205717d3';\n  #API_URL = `https://api.themoviedb.org/3`;\n\n  constructor() {\n    this.endpoint = null;\n    this.query = null;\n  }\n\n  fetchMovies() {\n    const searchParams = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: this.query,\n    });\n\n    return axios.get(`${this.#API_URL}${this.endpoint}?${searchParams}`);\n  }\n}\n\nexport const api = new SearchMovies();\n","import styled from 'styled-components';\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 45px;\n`;\n\nexport const TrendingListItem = styled.li`\n  width: calc((100% - 90px) / 3);\n  margin-top: 10px;\n  text-align: left;\n`;\n\nexport const TrendingListPoster = styled.img`\n  margin-bottom: 10px;\n`;\n\nexport const TrendingListTitle = styled.p`\n  font-size: 20px;\n  font-family: 'FixelREgular';\n`;\n","import {\n  TrendingListTitle,\n  TrendingList,\n  TrendingListItem,\n  TrendingListPoster,\n} from './MovieList.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies, location, configSrc }) {\n  return (\n    <TrendingList>\n      {movies.map(movie => (\n        <TrendingListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <TrendingListPoster\n              loading=\"lazy\"\n              src={configSrc + movie.poster_path}\n              alt=\"movie poster\"\n            />\n            <TrendingListTitle>{movie.title}</TrendingListTitle>\n          </Link>\n        </TrendingListItem>\n      ))}\n    </TrendingList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n  configSrc: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MovieList from 'components/movieList/MovieList';\nimport { api } from 'api/searchMovies';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const configSrc = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    api.endpoint = '/trending/movie/day';\n\n    async function fetchedMovies() {\n      try {\n        const result = await api.fetchMovies();\n        setMovies(result.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchedMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <MovieList movies={movies} location={location} configSrc={configSrc} />\n    </>\n  );\n}\n"],"names":["api","SearchMovies","this","endpoint","query","searchParams","URLSearchParams","api_key","axios","TrendingList","styled","TrendingListItem","TrendingListPoster","TrendingListTitle","MovieList","movies","location","configSrc","map","movie","to","id","state","from","loading","src","poster_path","alt","title","Home","useState","setMovies","useLocation","useEffect","result","data","results","console","log","fetchedMovies"],"sourceRoot":""}